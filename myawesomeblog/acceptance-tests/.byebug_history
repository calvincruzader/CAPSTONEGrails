continue
@browser.url.gsub(/%20/, ' ')
continue
blog_title
continue
exit
page.comment_by_another_reader
continue
exit
page.methods
page
continue
exit
div(:hi, :class => "theBlogTitle")
div(class: "theBlogTitle")
blog_title.text
blog_title
continue
continue 
continue
@blog_portion.chomp('...')
@blog_portion
page.blog_post
continue
page
continue
exit
comment_by_another_reader
continue
exit
comment_by_another_reader
continue
page
exit
page
choose_blog_post
continue
exit
page
comment_by_another_reader
continue
page.blog_post
continue
expect
continue
exit
page.all_comments_elements.first.text
page.all_comments_elements.first
continue
exit
all_comments_elements[0].text
all_comments_elements[0]
all_comments_elements.each.methods
all_comments_elements.each.text
all_comments_elements
all_comments
continue
exit
continue
page.choose_blog_post
exit
page
page.choose_blog_post
continue
exit
page.comment_by_another_reader
continue
exit
continue
exit
page.commentBox.focus
page.commentBox.class
page.commentBox.getClass
page.comment
page.commentBox
BetterLorem.w(20, true,false)
continue
exit
page
continue
@search_query
post_title.text
continue
@blog_preview
@blog_portion
exit
page.blog_post
exit
contineu
continue
exit
continue
exit
date_compare_less_recent
continue
date_compare_more_recent
exit
ten_most_recent_posts_elements.each.text
ten_most_recent_posts_elements.each.first.text
ten_most_recent_posts_elements.each.first.methods.select{|m|m.to_s.start_with?('t')}
ten_most_recent_posts_elements.each.first.methods
ten_most_recent_posts_elements.each.first
ten_most_recent_posts_elements.each.methods.select{|m|m.to_s.start_with?('v')}
ten_most_recent_posts_elements.each.methods.select{|m|m.to_s.start_with?('h')}
ten_most_recent_posts_elements.each.methods.select{|m|m.to_s.start_with?('t')}
ten_most_recent_posts_elements.each.entries
ten_most_recent_posts_elements.each.to_s
ten_most_recent_posts_elements.each.methods
ten_most_recent_posts_elements.html
ten_most_recent_posts_elements.size
ten_most_recent_posts_elements.methods
ten_most_recent_posts_elements.text
ten_most_recent_posts_elements
exit
ten_most_recent_posts
ten_most_recent_posts.methods
exit
ten_most_recent_posts.methods
ten_most_recent_posts
continue
choose_blog_post
continue
CONTINUE
goto_login
exit
goto_login
continue
arg1
exit
continue
exit
BetterLorem.p(10, true, true)
BetterLorem.p(10, true, false)
BetterLorem.p
BetterLorem.w
BetterLorem.p(10, true, true)
exit
BetterLorem.p(10, true, true)
continue
exit
string_generator
string-generator
exit
list_blogposts
exit
list_blogposts
exit
list_of_posts
exit
list_of_posts
exit
list_of_posts.index(0,0)
list_of_posts.index
list_of_posts.index(1)
list_of_posts.index[0]
list_of_posts.index(0)
list_of_posts.index
list_of_posts[0]
list_of_posts.methods
list_of_posts
continue
exit
page.blogpost_notification.include?(@title)
page.blogpost_notification.include?("created")
page.blogpost_notification
exit
blogpost_notification
continue
exit
username
continue
exit
page.text_field_elements.each{|m| m.text}
page.text_field_elements.each{|m| m.to_s}
page.text_field_elements.each{|m| m}
page.text_field_elements.methods
page.text_field_element.id
page.text_field_elements.ids
page.text_field_elements
page.methods.select{|m| m.to_s.start_with?('t')}
page.methods.select{|m| m.to_s.start_with?('i')}
page.methods
page
continue
page.username
page
exit
continue
exit
loginBtn
continue
exit
loginBtn
continue
exit
continue
loginBtn
exit
loginBtn.click
loginBtn.byebug
loginBtn.instance_variable_set
loginBtn.html
loginBtn.methods
loginBtn
continue
exit
loginBtn
continue
loginBtn
continue
exit
page.loginBtn?
page.loginBtn
page.login
page.methods
page.element
page.elements
page
exit
page
exit
loginBtn
exit
loginBtn
exit
y
exit
loginBtn
exit
loginBtn
exit
loginBtn
exit
loginBtn
exit
exir
loginBtn_element
loginBtn
loginButton
exit
sdf
loginButton
exit
page.i_element
page.i_elements
page.methods.select{|m|m.to_s.start_with?('i')}
page.methods.select{|m|m.to_s.start_with?('l')}
exit
page.methods.select{|m | m.to_s.start_with?('lo')}
page.methods.select{|m | m.to_s.start_with?('s')}
page.methods.select{|m | m.to_s.include?('s')}
page.methods.select{|m | m.to_s.start_with('s')}
page.methods
page
